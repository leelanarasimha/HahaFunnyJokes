// <auto-generated />
using System;
using HahaFunnyJokes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HahaFunnyJokes.Data.Migrations
{
    [DbContext(typeof(HahaFunnyJokesDbContext))]
    [Migration("20190627112229_RemovedRole")]
    partial class RemovedRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HahaFunnyJokes.Domain.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("HahaFunnyJokes.Domain.Joke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Jokes");
                });

            modelBuilder.Entity("HahaFunnyJokes.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int>("IsAdmin");

                    b.Property<string>("Name");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HahaFunnyJokes.Domain.UserHobby", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("HobbyId");

                    b.HasKey("UserId", "HobbyId");

                    b.HasIndex("HobbyId");

                    b.ToTable("UserHobbies");
                });

            modelBuilder.Entity("HahaFunnyJokes.Domain.Joke", b =>
                {
                    b.HasOne("HahaFunnyJokes.Domain.User", "User")
                        .WithMany("Jokes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HahaFunnyJokes.Domain.UserHobby", b =>
                {
                    b.HasOne("HahaFunnyJokes.Domain.Hobby", "Hobby")
                        .WithMany("UserHobbies")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HahaFunnyJokes.Domain.User", "User")
                        .WithMany("UserHobbies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
